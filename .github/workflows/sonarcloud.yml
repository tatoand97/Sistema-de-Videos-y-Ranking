# Workflow name
name: SonarCloud (monorepo Go)

# Trigger events
on:
  push:
    branches: [main]

jobs:
  sonar:
    name: Analyze ${{ matrix.name }}
    runs-on: ubuntu-latest
    
    # Matrix strategy configuration
    strategy:
      fail-fast: false
      matrix:
        include:
          # API Service
          - name: Api
            path: Api
            sonar_project_key: API_Video_Sistema
            sonar_project_name: API_Video_Sistema
            env: Api

          # Worker Services
          - name: Workers-AudioRemoval
            path: Workers/AudioRemoval
            sonar_project_key: Workers-AudioRemoval
            sonar_project_name: Workers-AudioRemoval
            env: Workers-AudioRemoval

          - name: Workers-EditVideo
            path: Workers/EditVideo
            sonar_project_key: Workers-EditVideo
            sonar_project_name: Workers-EditVideo
            env: Workers-EditVideo

          - name: Workers-gossipOpenClose
            path: Workers/gossipOpenClose
            sonar_project_key: Workers-gossipOpenClose
            sonar_project_name: Workers-gossipOpenClose
            env: Workers-gossipOpenClose

          - name: Workers-TrimVideo
            path: Workers/TrimVideo
            sonar_project_key: Workers-TrimVideo
            sonar_project_name: Workers-TrimVideo
            env: Workers-TrimVideo

          - name: Workers-Watermarking
            path: Workers/Watermarking
            sonar_project_key: Workers-Watermarking
            sonar_project_name: Workers-Watermarking
            env: Workers-Watermarking

          # Infrastructure Services
          - name: Workers-AdminCache
            path: Workers/AdminCache
            sonar_project_key: Workers-AdminCache
            sonar_project_name: Workers-AdminCache
            env: Workers-AdminCache

          - name: Workers-StatesMachine
            path: Workers/StatesMachine
            sonar_project_key: Workers-StatesMachine
            sonar_project_name: Workers-StatesMachine
            env: Workers-StatesMachine

    # Environment configuration
    environment: ${{ matrix.env }}
    defaults:
      run:
        working-directory: ${{ matrix.path }}

    # Job steps
    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # Verify go.sum integrity
      - name: Sanity check go.sum
        if: hashFiles(format('{0}/go.mod', matrix.path)) != ''
        working-directory: ${{ matrix.path }}
        shell: bash
        run: |
          if [ -f go.sum ]; then
            # Quick view of first 10 lines
            nl -ba go.sum | sed -n '1,10p'

            # Check for merge markers
            grep -nE '^(<<<<<<<|=======|>>>>>>>)' go.sum && {
              echo "::error ::go.sum contains merge markers. Please fix and commit.";
              exit 1;
            } || true

            # Verify line format
            awk 'NF!=3 {print "Line", NR, "=>", $0; exit 1}' go.sum || true
          else
            echo "No go.sum found; will be generated with go mod tidy/download if needed."
          fi

      # Download dependencies
      - name: Download deps
        if: hashFiles(format('{0}/go.mod', matrix.path)) != ''
        working-directory: ${{ matrix.path }}
        run: go mod download

      # Run tests with coverage
      - name: Run tests with coverage
        run: go test ./... -coverpkg=./... -coverprofile=coverage.out -covermode=atomic

      # SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ matrix.path }}
          args: >
            -Dsonar.organization=tatoand97
            -Dsonar.projectKey=${{ matrix.sonar_project_key }}
            -Dsonar.projectName=${{ matrix.sonar_project_name }}
            -Dsonar.sources=.
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.exclusions=**/vendor/**,**/static/**,**/assets/**,**/migrations/**,**/*.yaml,**/*.yml
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.sourceEncoding=UTF-8
